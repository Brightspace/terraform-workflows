name: 'Terraform Plan'

inputs:

  GITHUB_TOKEN:
    default: ${{ github.token }}

  comment_plan:
    description: Create a pull request comment of the plan in addition to adding it to the summary page
    required: false
    default: true

  config:
    description: Environment config object from terraform-workflows/configure
    required: true

  refresh_on_pr:
    description: true/false. Whether to do a refresh for PR plans.
    default: true

  skip_archive:
    description: true/false. Whether to skip archiving the plan and artifacts
    default: false

  terraform_version:
    description: Which version of terraform to use
    required: true

  require_lockfile:
    description: Fail the action if the .terraform.lock.hcl file doesn't declare all providers in the workspace
    default: false

  use_rw_role:
    description: Use the read-write "apply-time" role instead of the read-only "plan-time" role
    default: false

outputs:
  plan_path:
    description: Path to plan file
    value: ${{ steps.plan.outputs.plan_path }}

  plan_json_path:
    description: Path to planned changes as JSON
    value: ${{ steps.plan.outputs.plan_json_path }}

  has_changes:
    description: true/false. Whether there's any planned changes.
    value: ${{ steps.plan.outputs.has_changes }}

runs:
  using: composite
  steps:

    - uses: Brightspace/third-party-actions@hashicorp/setup-terraform
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false

    - uses: Brightspace/terraform-workflows/actions/assert-terraform-version@omsmith/nopreflight

    - id: setup
      shell: bash
      run: |
        echo "artifacts_dir=$(mktemp -d)" >> "${GITHUB_OUTPUT}"

    - id: plan
      working-directory: ${{ fromJson(inputs.config).workspace_path }}
      run: ${{ github.action_path }}/plan.sh
      shell: bash
      env:
        ARTIFACTS_DIR: ${{ steps.setup.outputs.artifacts_dir }}
        ENVIRONMENT: ${{ fromJson(inputs.config).environment }}
        PROVIDER_ROLE_ARN: ${{ inputs.use_rw_role != "true" && fromJson(inputs.config).provider_role_arn_rw || fromJson(inputs.config).provider_role_arn_ro }}
        PROVIDER_ROLE_TFVAR: ${{ fromJson(inputs.config).provider_role_tfvar }}
        REFRESH_ON_PR: ${{ inputs.refresh_on_pr }}
        REQUIRE_LOCKFILE: ${{ inputs.require_lockfile }}

    - run: ${{ github.action_path }}/details.sh
      shell: bash
      env:
        ARTIFACTS_DIR: ${{ steps.setup.outputs.artifacts_dir }}
        ENVIRONMENT: ${{ fromJson(inputs.config).environment }}
        HAS_CHANGES: ${{ steps.plan.outputs.has_changes }}
        WORKSPACE_PATH: ${{ fromJson(inputs.config).workspace_path }}
        TERRAFORM_VERSION_INPUT: ${{ inputs.terraform_version }}

    - run: ${{ github.action_path }}/archive.sh
      if: ${{ inputs.skip_archive != 'true' }}
      shell: bash
      env:
        ENVIRONMENT: ${{ fromJson(inputs.config).environment }}
        PATH_TO_ARCHIVE: ${{ steps.setup.outputs.artifacts_dir }}

    - working-directory: ${{ fromJson(inputs.config).workspace_path }}
      if: ${{ inputs.comment_plan == 'true' }}
      run: ${{ github.action_path }}/hide-old-comment.sh
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        COMMENTS_URL: ${{ github.event.pull_request._links.comments.href }}
        ENVIRONMENT: ${{ fromJson(inputs.config).environment }}

    - working-directory: ${{ fromJson(inputs.config).workspace_path }}
      if: ${{ inputs.comment_plan == 'true' }}
      run: ${{ github.action_path }}/comment.sh
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        COMMENTS_URL: ${{ github.event.pull_request._links.comments.href }}
        ARTIFACTS_DIR: ${{ steps.setup.outputs.artifacts_dir }}
        ENVIRONMENT: ${{ fromJson(inputs.config).environment }}
        HAS_CHANGES: ${{ steps.plan.outputs.has_changes }}
