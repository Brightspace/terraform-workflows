name: Terraform

on:
  workflow_call:
    inputs:
      comment_plan:
        description: Create a pull request comment of the plan in addition to adding it to the summary page
        required: false
        type: boolean
        default: true

      config:
        description: A JSON (with comments) config string
        required: true
        type: string

      default_branch:
        required: false
        type: string
        default: main

      refresh_on_pr:
        required: false
        type: boolean
        default: true

      terraform_version:
        required: true
        type: string

      apply_timeout:
        required: false
        default: 60
        type: number

      require_lockfile:
        description: Fail the workflow if the .terraform.lock.hcl file doesn't declare all providers in the workspace
        required: false
        type: boolean
        default: false

      artifacts_url:
        description: Download an archive from the specified url and extract it under .artifacts in the root of the workspace
        required: false
        type: string
        default: ""

      artifact_repositories:
        description: |
          Configuration for additional GitHub repositories of artifacts to be downloaded into the workspace.
          Each repository can be referenced as ${path.root}/.artifacts/artifact_repositories/{slug}/{ref}.
          Supports passing up to 5 token secrets for authorizing the downloads
        required: false
        type: string

    outputs:
      had_changes:
        value: ${{ toJson(jobs.plan_apply.outputs.*) != '[]' }}

    secrets:
      ARTIFACT_REPOSITORIES_SECRET_1:
        required: false
      ARTIFACT_REPOSITORIES_SECRET_2:
        required: false
      ARTIFACT_REPOSITORIES_SECRET_3:
        required: false
      ARTIFACT_REPOSITORIES_SECRET_4:
        required: false
      ARTIFACT_REPOSITORIES_SECRET_5:
        required: false

jobs:
  plan_apply:
    name: Plan and Apply
    runs-on: [self-hosted, Linux, AWS]
    timeout-minutes: 60

    permissions:
      contents: read
      id-token: write
      pull-requests: write

    environment: ${{ github.event_name != 'pull_request' && matrix.environment || null }}
    # Workflows against a branch run one-at-a-time, workflows against a PR are non-blocking
    concurrency: ${{ matrix.environment }}/${{ github.event_name != 'pull_request' && github.ref || github.run_id }}

    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(inputs.config).*.workspaces.*.environment }}

    steps:
    - id: parse
      uses: Brightspace/terraform-workflows/actions/parse-config@v4
      with:
        # GHA's fromJson() supports comments in JSON strings which is nice from
        # an end-user perspective (e.g. naming account ids). toJson(fromJson())
        # is used in order to strip these comments out before parsing it ourselves
        config: ${{ toJson(fromJson(inputs.config)) }}
        max_environments: 50

    - uses: Brightspace/third-party-actions@actions/checkout

    - if: ${{ github.event_name != 'pull_request' }}
      name: 'Assert: Branch is up to date'
      uses: Brightspace/assert-git-remote-ref-action@main
      with:
        remote: origin
        ref: ${{ inputs.default_branch }}

    - if: ${{ inputs.artifacts_url != '' }}
      name: 'Extract artifacts'
      uses: Brightspace/s3-artifact-actions/extract@main
      with:
        path: ${{ fromJson(steps.parse.outputs.config)[matrix.environment].workspace_path }}/.artifacts
        artifacts_url: ${{ inputs.artifacts_url }}

    - if: ${{ inputs.artifact_repositories != '' }}
      name: Download artifact repositories
      uses: Brightspace/terraform-workflows/actions/plan/artifact-repositories@v4
      with:
        artifacts_dir: ${{ fromJson(steps.parse.outputs.config)[matrix.environment].workspace_path }}/.artifacts
        config: ${{ inputs.artifact_repositories }}
      env:
        ARTIFACT_REPOSITORIES_SECRET_1: ${{ secrets.ARTIFACT_REPOSITORIES_SECRET_1 }}
        ARTIFACT_REPOSITORIES_SECRET_2: ${{ secrets.ARTIFACT_REPOSITORIES_SECRET_2 }}
        ARTIFACT_REPOSITORIES_SECRET_3: ${{ secrets.ARTIFACT_REPOSITORIES_SECRET_3 }}
        ARTIFACT_REPOSITORIES_SECRET_4: ${{ secrets.ARTIFACT_REPOSITORIES_SECRET_4 }}
        ARTIFACT_REPOSITORIES_SECRET_5: ${{ secrets.ARTIFACT_REPOSITORIES_SECRET_5 }}

    - if: ${{ github.event_name == 'pull_request' }}
      name: Assume Hub Role (PR)
      uses: Brightspace/third-party-actions@aws-actions/configure-aws-credentials
      with:
        role-to-assume: arn:aws:iam::323258989788:role/hub-roles/github+${{ github.repository_owner }}+${{ github.event.repository.name }}+repo
        aws-region: us-east-1

    - if: ${{ github.event_name != 'pull_request' }}
      name: Assume Hub Role
      uses: Brightspace/third-party-actions@aws-actions/configure-aws-credentials
      with:
        role-to-assume: arn:aws:iam::323258989788:role/hub-roles/github+${{ github.repository_owner }}+${{ github.event.repository.name }}+tfapply
        aws-region: us-east-1

    - id: plan
      uses: Brightspace/terraform-workflows/actions/plan@v4
      with:
        comment_plan: ${{ inputs.comment_plan }}
        config: ${{ toJson(fromJson(steps.parse.outputs.config)[matrix.environment]) }}
        use_rw_role: ${{ github.event_name != 'pull_request' && "true" || "false" }}
        terraform_version: ${{ inputs.terraform_version }}
        refresh_on_pr: ${{ inputs.refresh_on_pr }}
        require_lockfile: ${{ inputs.require_lockfile }}
        skip_archive: true

    # Matrixed jobs overwrite eachother's outputs if they use the same name.
    # Unfortunately though, job outputs need to be statically defined in the yml
    # Step outputs are dynamic though, as well as the _population_ of job outputs
    # (based on the existence of their configured value). This step uniquely maps
    # the environment name to one of the statically defined outputs below. The
    # apply job can then consume the sparse set of outputs that were assigned a
    # value via `needs.plan.outputs.*`
    - if: ${{ github.event_name != 'pull_request' && steps.plan.outputs.has_changes == 'true' }}
      name: Mark as changed
      id: changed
      shell: bash
      run: |
        ENVIRONMENT_INDEX=$(jq -cr \
          --arg environment "${ENVIRONMENT}" \
          '
            to_entries[]
            | select(.value == $environment)
            | .key
          ' \
          <<< "${ENVIRONMENTS}"
        )
        echo "changed_env_${ENVIRONMENT_INDEX}=${ENVIRONMENT}" >> "${GITHUB_OUTPUT}"
      env:
        ENVIRONMENTS: ${{ steps.parse.outputs.environments }}
        ENVIRONMENT: ${{ matrix.environment }}

    - if: github.event_name != 'pull_request' && steps.plan.outputs.has_changes == 'true'
      name: Apply
      working-directory: ${{ fromJson(steps.parse.outputs.config)[matrix.environment].workspace_path }}
      shell: bash
      run: |
        terraform apply -input=false "${PLAN_PATH}"
      env:
        PLAN_PATH: ${{ steps.plan.outputs.plan_path }}

    outputs:
      changed_env_0: ${{ steps.changed.outputs.changed_env_0 }}
      changed_env_1: ${{ steps.changed.outputs.changed_env_1 }}
      changed_env_2: ${{ steps.changed.outputs.changed_env_2 }}
      changed_env_3: ${{ steps.changed.outputs.changed_env_3 }}
      changed_env_4: ${{ steps.changed.outputs.changed_env_4 }}
      changed_env_5: ${{ steps.changed.outputs.changed_env_5 }}
      changed_env_6: ${{ steps.changed.outputs.changed_env_6 }}
      changed_env_7: ${{ steps.changed.outputs.changed_env_7 }}
      changed_env_8: ${{ steps.changed.outputs.changed_env_8 }}
      changed_env_9: ${{ steps.changed.outputs.changed_env_9 }}
      changed_env_10: ${{ steps.changed.outputs.changed_env_10 }}
      changed_env_11: ${{ steps.changed.outputs.changed_env_11 }}
      changed_env_12: ${{ steps.changed.outputs.changed_env_12 }}
      changed_env_13: ${{ steps.changed.outputs.changed_env_13 }}
      changed_env_14: ${{ steps.changed.outputs.changed_env_14 }}
      changed_env_15: ${{ steps.changed.outputs.changed_env_15 }}
      changed_env_16: ${{ steps.changed.outputs.changed_env_16 }}
      changed_env_17: ${{ steps.changed.outputs.changed_env_17 }}
      changed_env_18: ${{ steps.changed.outputs.changed_env_18 }}
      changed_env_19: ${{ steps.changed.outputs.changed_env_19 }}
      changed_env_20: ${{ steps.changed.outputs.changed_env_20 }}
      changed_env_21: ${{ steps.changed.outputs.changed_env_21 }}
      changed_env_22: ${{ steps.changed.outputs.changed_env_22 }}
      changed_env_23: ${{ steps.changed.outputs.changed_env_23 }}
      changed_env_24: ${{ steps.changed.outputs.changed_env_24 }}
      changed_env_25: ${{ steps.changed.outputs.changed_env_25 }}
      changed_env_26: ${{ steps.changed.outputs.changed_env_26 }}
      changed_env_27: ${{ steps.changed.outputs.changed_env_27 }}
      changed_env_28: ${{ steps.changed.outputs.changed_env_28 }}
      changed_env_29: ${{ steps.changed.outputs.changed_env_29 }}
      changed_env_30: ${{ steps.changed.outputs.changed_env_30 }}
      changed_env_31: ${{ steps.changed.outputs.changed_env_31 }}
      changed_env_32: ${{ steps.changed.outputs.changed_env_32 }}
      changed_env_33: ${{ steps.changed.outputs.changed_env_33 }}
      changed_env_34: ${{ steps.changed.outputs.changed_env_34 }}
      changed_env_35: ${{ steps.changed.outputs.changed_env_35 }}
      changed_env_36: ${{ steps.changed.outputs.changed_env_36 }}
      changed_env_37: ${{ steps.changed.outputs.changed_env_37 }}
      changed_env_38: ${{ steps.changed.outputs.changed_env_38 }}
      changed_env_39: ${{ steps.changed.outputs.changed_env_39 }}
      changed_env_40: ${{ steps.changed.outputs.changed_env_40 }}
      changed_env_41: ${{ steps.changed.outputs.changed_env_41 }}
      changed_env_42: ${{ steps.changed.outputs.changed_env_42 }}
      changed_env_43: ${{ steps.changed.outputs.changed_env_43 }}
      changed_env_44: ${{ steps.changed.outputs.changed_env_44 }}
      changed_env_45: ${{ steps.changed.outputs.changed_env_45 }}
      changed_env_46: ${{ steps.changed.outputs.changed_env_46 }}
      changed_env_47: ${{ steps.changed.outputs.changed_env_47 }}
      changed_env_48: ${{ steps.changed.outputs.changed_env_48 }}
      changed_env_49: ${{ steps.changed.outputs.changed_env_49 }}
